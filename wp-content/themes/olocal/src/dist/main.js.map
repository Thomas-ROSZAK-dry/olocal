{"version":3,"sources":["slider.js","main.js","../../../../../../../../../Users/thoma/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../../../../../../Users/thoma/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["slider","init","commentList","document","querySelectorAll","console","log","controlsContainer","querySelector","comment","newButton","createElement","classList","add","dataset","commentId","appendChild","addEventListener","handleButtonClick","event","currentTarget","scrollToComment","commentListContainer","targetComment","targetXPosition","offsetLeft","scroll","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","i","length","module"],"mappings":"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","file":"main.js","sourceRoot":"..\\js","sourcesContent":["// const => une constante\nconst slider = {\n    init: function() {\n        // générer un bouton par commentaire\n            // récupérer les commentaires\n        let commentList = document.querySelectorAll('.slider__comments li');\n        console.log(commentList);\n            // pour chaque commentaire, générer un bouton\n        const controlsContainer = document.querySelector('.slider__controls');\n        for (const comment of commentList) {\n            // créer le bouton\n            const newButton = document.createElement('div');\n            newButton.classList.add('slider__nav-button');\n            newButton.dataset.commentId = comment.dataset.commentId;\n            controlsContainer.appendChild(newButton);\n            // nouveaux écouteurs => au clic sur un bouton, on scrolle vers le commentaire correspondant\n            newButton.addEventListener('click', slider.handleButtonClick)\n        }\n\n        // toutes les 10 secondes, on passe au commentaire suivant\n    },\n    handleButtonClick: function(event) {\n        // on récupère le dataset comment-id sur le bouton cliqué\n        const commentId = event.currentTarget.dataset.commentId;\n        // on déclenche le scroll\n        slider.scrollToComment(commentId);\n    },\n    scrollToComment: function(commentId) {\n        // récupérer la liste des commentaires dans le DOM (ul)\n        const commentListContainer = document.querySelector('.slider__comments');\n        // faire scroller la liste des commentaire\n            // définir la coordonée en X à atteindre\n                // définir le commentaire cible => à partir de l'événement\n        const targetComment = document.querySelector('.slider__comments li[data-comment-id=\"'+ commentId +'\"');\n                // récupérer la position en X de la cible\n        const targetXPosition = targetComment.offsetLeft;\n                // faire le scroll\n        commentListContainer.scroll(targetXPosition, 0);\n    }\n}\n\n\ndocument.addEventListener('DOMContentLoaded', slider.init);","// import des dépendances depuis node_modules\nimport '@fortawesome/fontawesome-free/scss/fontawesome.scss';\nimport '@fortawesome/fontawesome-free/scss/solid.scss';\nimport '@fortawesome/fontawesome-free/scss/brands.scss';\nimport '@fortawesome/fontawesome-free/scss/regular.scss';\n\n// import sass from \nimport '../scss/main.scss'\n\n// Importer des fichiers javascript\nimport './slider';","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}